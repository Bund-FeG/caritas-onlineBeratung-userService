openapi: 3.0.1
info:
  title: will be replaced
  description: This information will be replaced by the SpringFox config information
  version: 0.0.1
servers:
  - url: /
paths:
  /useradmin:
    get:
      tags:
        - root-controller
      summary: 'Returns the hal root entry point. [Authorization: Role: user-admin]'
      operationId: getRoot
      responses:
        200:
          description: OK - successfull operation
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RootDTO'
      security:
        - Bearer: [ ]
  /useradmin/sessions:
    get:
      tags:
        - admin-user-controller
      summary: 'Returns the list of agencies by search query parameter. [Authorization: Role:
      user-admin]'
      operationId: getSessions
      parameters:
        - name: filter
          in: query
          description: 'The filter parameters to search for. If no filter is set all sessions are
          being returned. If more than one filter is set the first given filter is used only.'
          schema:
            type: object
            properties:
              agency:
                type: integer
              asker:
                type: string
              consultant:
                type: string
              consultingType:
                type: integer
        - name: page
          in: query
          description: Number of page where to start in the query (1 = first page)
          required: true
          schema:
            type: integer
        - name: perPage
          in: query
          description: Number of items which are being returned per page
          required: true
          schema:
            type: integer
      responses:
        200:
          description: OK - successfull operation
          content:
            'application/hal+json':
              schema:
                $ref: '#/components/schemas/SessionAdminResultDTO'
        400:
          description: BAD REQUEST - invalid/incomplete request or body object
        401:
          description: UNAUTHORIZED - no/invalid role/authorization
        500:
          description: INTERNAL SERVER ERROR - server encountered unexpected condition
      security:
        - Bearer: [ ]
  /useradmin/consultingtypes:
    get:
      tags:
        - admin-user-controller
      summary: 'Returns the full list of consulting types [Authorization: Role: agency-admin]'
      operationId: getConsultingTypes
      parameters:
        - name: page
          in: query
          description: Number of page where to start in the query (1 = first page)
          required: true
          schema:
            type: integer
            example: 1
        - name: perPage
          in: query
          description: Number of items which are being returned per page
          required: true
          schema:
            type: integer
            example: 20
      responses:
        200:
          description: OK - successfull operation
          content:
            'application/hal+json':
              schema:
                $ref: '#/components/schemas/ConsultingTypeAdminResultDTO'
        400:
          description: BAD REQUEST - invalid/incomplete request or body object
        401:
          description: UNAUTHORIZED - no/invalid role/authorization
        500:
          description: INTERNAL SERVER ERROR - server encountered unexpected condition
      security:
        - Bearer: [ ]
  /useradmin/report:
    get:
      tags:
        - admin-user-controller
      summary: 'Returns an generated report containing data integration violations. [Authorization:
        Role: user-admin]'
      operationId: generateViolationReport
      responses:
        200:
          description: OK - successfull operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ViolationDTO'
        401:
          description: UNAUTHORIZED - no/invalid role/authorization
        500:
          description: INTERNAL SERVER ERROR - server encountered unexpected condition
      security:
        - Bearer: [ ]
components:
  schemas:
    RootDTO:
      type: object
      required:
        - _links
      properties:
        _links:
          $ref: '#/components/schemas/RootLinks'

    RootLinks:
      type: object
      required:
        - self
      properties:
        self:
          $ref: '#/components/schemas/HalLink'
        sessions:
          $ref: '#/components/schemas/HalLink'

    HalLink:
      type: object
      required:
        - href
      properties:
        href:
          type: string
        method:
          type: string
          enum: [ GET, POST, DELETE, PUT ]
        templated:
          type: boolean

    SessionAdminResultDTO:
      type: object
      properties:
        _embedded:
          type: array
          items:
            $ref: '#/components/schemas/SessionAdminDTO'
        _links:
          $ref: '#/components/schemas/PaginationLinks'

    SessionAdminDTO:
      type: object
      properties:
        userId:
          type: string
          example: "1da238c6-cd46-4162-80f1-bff74eafe77f"
        consultantId:
          type: string
          example: "1da238c6-cd46-4162-80f1-bff74eafe77f"
        username:
          type: string
          example: "enc.OBSXEZTPOJWWC3TDMUWWC43LMVZC2NZS"
        email:
          type: string
          example: "email@beratungcaritas.de"
        consultingType:
          type: integer
          example: 1
        postcode:
          type: string
          example: "12345"
        agencyId:
          type: integer
          example: 1
        isTeamSession:
          type: boolean
        messageDate:
          type: string
        createDate:
          type: string
        updateDate:
          type: string

    PaginationLinks:
      type: object
      required:
        - self
      properties:
        self:
          $ref: '#/components/schemas/HalLink'
        next:
          $ref: '#/components/schemas/HalLink'
        previous:
          $ref: '#/components/schemas/HalLink'

    ConsultingTypeAdminResultDTO:
      type: object
      properties:
        _embedded:
          type: array
          items:
            $ref: '#/components/schemas/ConsultingTypeResultDTO'
        _links:
          $ref: '#/components/schemas/PaginationLinks'

    ConsultingTypeResultDTO:
      type: object
      properties:
        consultingTypeId:
          type: integer
          format: int32
          example: 2
        name:
          type: string
          example: "schwangerschaftsberatung"
        languageFormal:
          type: boolean
          example: false
        roles:
          $ref: '#/components/schemas/RoleDTO'
        sendWelcomeMessage:
          type: boolean
          example: true
        welcomeMessage:
          type: string
          example: Willkommen bei der Schwangerschaftsberatung
        monitoring:
          type: boolean
          example: true
        feedbackChat:
          type: boolean
          example: true
        notifications:
          $ref: '#/components/schemas/NotificationDTO'

    RoleDTO:
      type: object
      properties:
        consultant:
          $ref: '#/components/schemas/RoleConsultantDTO'

    RoleConsultantDTO:
      type: object
      properties:
        roleNames:
          $ref: '#/components/schemas/RoleNames'

    RoleNames:
      type: array
      items:
        type: string

    NotificationDTO:
      type: object
      properties:
        newMessage:
          $ref: '#/components/schemas/NewMessageDTO'

    NewMessageDTO:
      type: object
      properties:
        teamSession:
          $ref: '#/components/schemas/TeamSessionDTO'

    TeamSessionDTO:
      type: object
      properties:
        toConsultant:
          $ref: '#/components/schemas/ToConsultantDTO'

    ToConsultantDTO:
      type: object
      properties:
        allTeamConsultants:
          type: boolean
          example: true

    ViolationDTO:
      type: object
      properties:
        violationType:
          type: string
          enum:
            - 'CONSULTANT'
            - 'ASKER'
        identifier:
          type: string
        reason:
          type: string
        additionalInformation:
          type: array
          items:
            $ref: '#/components/schemas/AdditionalInformationDTO'

    AdditionalInformationDTO:
      type: object
      properties:
        name:
          type: string
        value:
          type: string

  securitySchemes:
    Bearer:
      type: apiKey
      name: Authorization
      in: header
